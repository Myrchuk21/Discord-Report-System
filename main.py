import discord
from discord.ext import commands
from dotenv import load_dotenv
import os
import json
import time  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–π–º–µ—Ä–∞–º–∏

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ .env —Ñ–∞–π–ª–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö –Ω–∞–ª–∏—á–∏–µ
SUPPORT_ROLE_ID = os.getenv("SUPPORT_ROLE_ID")
if not SUPPORT_ROLE_ID:
    raise ValueError("SUPPORT_ROLE_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ.")
SUPPORT_ROLE_ID = int(SUPPORT_ROLE_ID)

REPORT_LOG_CHANNEL_ID = os.getenv("REPORT_LOG_CHANNEL_ID")
if not REPORT_LOG_CHANNEL_ID:
    raise ValueError("REPORT_LOG_CHANNEL_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ.")
REPORT_LOG_CHANNEL_ID = int(REPORT_LOG_CHANNEL_ID)

CLOSED_LOG_CHANNEL_ID = os.getenv("CLOSED_LOG_CHANNEL_ID")
if not CLOSED_LOG_CHANNEL_ID:
    raise ValueError("CLOSED_LOG_CHANNEL_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ.")
CLOSED_LOG_CHANNEL_ID = int(CLOSED_LOG_CHANNEL_ID)

REPORTS_FILE = "reports.json"

# –ï—Å–ª–∏ —Ñ–∞–π–ª —Å –∂–∞–ª–æ–±–∞–º–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–π, —Å–æ–∑–¥–∞—ë–º –µ–≥–æ
if not os.path.exists(REPORTS_FILE):
    with open(REPORTS_FILE, "w") as f:
        json.dump([], f)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∂–∞–ª–æ–±—ã –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_last_report_time = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∂–∞–ª–æ–±
def get_all_reports():
    try:
        with open(REPORTS_FILE, "r") as f:
            content = f.read().strip()
            if not content:
                return []
            return json.loads(content)
    except json.JSONDecodeError:
        return []

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π report_counter
def get_last_report_id():
    reports = get_all_reports()
    if reports:
        return max(report['report_id'] for report in reports)
    return 0

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é report_counter
report_counter = get_last_report_id()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π –∂–∞–ª–æ–±—ã
def save_report(report):
    reports = get_all_reports()
    reports.append(report)
    with open(REPORTS_FILE, "w") as f:
        json.dump(reports, f)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã
class ReportModal(discord.ui.Modal, title="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É"):
    user_id = discord.ui.TextInput(label="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã", required=True)
    reason = discord.ui.TextInput(label="–ü—Ä–∏—á–∏–Ω–∞ –∂–∞–ª–æ–±—ã", placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É", style=discord.TextStyle.paragraph, required=True)

    async def on_submit(self, interaction: discord.Interaction):
        global report_counter

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–Ω—Ç–∏—Å–ø–∞–º (–µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ 2 –º–∏–Ω—É—Ç)
        user_id = str(interaction.user.id)
        current_time = time.time()
        if user_id in user_last_report_time:
            last_report_time = user_last_report_time[user_id]
            if current_time - last_report_time < 120:  # 120 —Å–µ–∫—É–Ω–¥ = 2 –º–∏–Ω—É—Ç—ã
                await interaction.response.send_message("‚ùå –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ 2 –º–∏–Ω—É—Ç—ã.", ephemeral=True)
                return

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∂–∞–ª–æ–±—ã
        user_last_report_time[user_id] = current_time

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID
        if not self.user_id.value.isdigit():
            await interaction.response.send_message("‚ùå ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!", ephemeral=True)
            return

        report_counter += 1
        report_id = report_counter

        embed = discord.Embed(
            title=f"üö® –ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞ #{report_id}",
            color=discord.Color.red()
        )
        embed.add_field(name="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", value=self.user_id.value, inline=False)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞ –∂–∞–ª–æ–±—ã", value=self.reason.value, inline=False)
        embed.set_footer(text=f"–ñ–∞–ª–æ–±–∞ –æ—Ç {interaction.user}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∂–∞–ª–æ–±—É –≤ —Ñ–∞–π–ª
        report = {
            "report_id": report_id,
            "user_id": self.user_id.value,
            "reason": self.reason.value,
            "reported_by": str(interaction.user.id),
            "is_closed": False,  # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å, –∑–∞–∫—Ä—ã—Ç–∞ –ª–∏ –∂–∞–ª–æ–±–∞
            "resolved_by": None,  # –ü–æ–ª–µ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ—à–∏–ª –∂–∞–ª–æ–±—É
            "claimed_by": None  # –ù–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–∫–ª–∏–∫–Ω—É–≤—à–µ–≥–æ—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        }
        save_report(report)

        await interaction.response.send_message("‚úÖ –ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", ephemeral=True)

        log_channel = bot.get_channel(REPORT_LOG_CHANNEL_ID)
        if log_channel:
            view = ReportActionView(report_id, self.user_id.value, self.reason.value)
            await log_channel.send(
                content=f"<@&{SUPPORT_ROLE_ID}>",
                embed=embed,
                view=view,
                allowed_mentions=discord.AllowedMentions(roles=True)
            )


# –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ –∂–∞–ª–æ–±–æ–π
class ReportActionView(discord.ui.View):
    def __init__(self, report_id, user_id, report_reason):
        super().__init__(timeout=None)
        self.report_id = report_id
        self.user_id = user_id
        self.report_reason = report_reason
        self.claimed_by = None

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –∂–∞–ª–æ–±–∞ —É–∂–µ –∑–∞–∫—Ä—ã—Ç–∞
        self.is_closed = False
        reports = get_all_reports()
        for report in reports:
            if report["report_id"] == self.report_id:
                self.is_closed = report.get("is_closed", False)
                self.claimed_by = report.get("claimed_by", None)
                break

    @discord.ui.button(label="–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –∂–∞–ª–æ–±—É", style=discord.ButtonStyle.primary)
    async def claim(self, interaction: discord.Interaction, button: discord.ui.Button):
        if not any(role.id == SUPPORT_ROLE_ID for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –æ—Ç–∫–ª–∏–∫–∞—Ç—å—Å—è –Ω–∞ –∂–∞–ª–æ–±—ã.", ephemeral=True)
            return

        if self.claimed_by is None:
            self.claimed_by = interaction.user
            button.disabled = True

            # –û–±–Ω–æ–≤–ª—è–µ–º –∂–∞–ª–æ–±—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è
            reports = get_all_reports()
            for report in reports:
                if report["report_id"] == self.report_id:
                    report["claimed_by"] = str(interaction.user.id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–∫–ª–∏–∫–Ω—É–≤—à–µ–≥–æ—Å—è
                    break

            with open(REPORTS_FILE, "w") as f:
                json.dump(reports, f)

            embed = interaction.message.embeds[0]
            embed.add_field(name="–û—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=False)

            await interaction.response.send_message(f"‚úÖ {interaction.user.mention} –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ –∂–∞–ª–æ–±—É #{self.report_id}.", ephemeral=True)
            await interaction.message.edit(embed=embed, view=self)
        else:
            await interaction.response.send_message("‚ùó –ñ–∞–ª–æ–±–∞ —É–∂–µ –≤ —Ä–∞–±–æ—Ç–µ –¥—Ä—É–≥–∏–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.", ephemeral=True)

    @discord.ui.button(label="–ó–∞–∫—Ä—ã—Ç—å –∂–∞–ª–æ–±—É", style=discord.ButtonStyle.danger)
    async def close(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.is_closed:
            await interaction.response.send_message("‚ùå –≠—Ç–∞ –∂–∞–ª–æ–±–∞ —É–∂–µ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞.", ephemeral=True)
            return

        if interaction.user != self.claimed_by:
            await interaction.response.send_message("‚ùå –¢–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –æ—Ç–∫–ª–∏–∫–Ω—É–≤—à–∏–π—Å—è –Ω–∞ –∂–∞–ª–æ–±—É, –º–æ–∂–µ—Ç –µ—ë –∑–∞–∫—Ä—ã—Ç—å.", ephemeral=True)
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫—Ä—ã—Ç–∏—è –∂–∞–ª–æ–±—ã
        await interaction.response.send_modal(CloseReportModal(
            report_id=self.report_id,
            closer=interaction.user,
            message=interaction.message,
            view=self,
            user_id=self.user_id,
            report_reason=self.report_reason
        ))


# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –∂–∞–ª–æ–±—ã
class CloseReportModal(discord.ui.Modal, title="–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∂–∞–ª–æ–±—ã"):
    reason = discord.ui.TextInput(label="–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è", placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∑–∞–∫—Ä—ã—Ç–∏—è –∂–∞–ª–æ–±—ã", style=discord.TextStyle.paragraph, required=True)

    def __init__(self, report_id, closer, message, view, user_id, report_reason):
        super().__init__()
        self.report_id = report_id
        self.closer = closer
        self.message = message
        self.view = view
        self.user_id = user_id
        self.report_reason = report_reason

    async def on_submit(self, interaction: discord.Interaction):
        reason = self.reason.value

        # –ó–∞–∫—Ä—ã—Ç–∏–µ –∂–∞–ª–æ–±—ã
        closed_embed = discord.Embed(
            title=f"–ñ–∞–ª–æ–±–∞ #{self.report_id} –∑–∞–∫—Ä—ã—Ç–∞",
            description=f"**–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è**: {reason}\n**–ó–∞–∫—Ä—ã—Ç–æ**: {self.closer.mention}\n**–ñ–∞–ª–æ–±–∞ –ø–æ–¥–∞–Ω–∞ –Ω–∞**: {self.user_id}\n**–ñ–∞–ª–æ–±–∞ –ø–æ–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º**: {self.closer.mention}",
            color=discord.Color.green()
        )
        closed_embed.set_footer(text=f"–ó–∞–∫—Ä—ã—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {self.closer}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –∂–∞–ª–æ–±–∞–º–∏
        reports = get_all_reports()
        for report in reports:
            if report["report_id"] == self.report_id:
                report["is_closed"] = True
                report["resolved_by"] = str(self.closer.id)  # –î–æ–±–∞–≤–ª—è–µ–º ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–∫—Ä—ã–ª –∂–∞–ª–æ–±—É
                break

        with open(REPORTS_FILE, "w") as f:
            json.dump(reports, f)

        closed_log_channel = bot.get_channel(CLOSED_LOG_CHANNEL_ID)
        if closed_log_channel:
            await closed_log_channel.send(embed=closed_embed)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∂–∞–ª–æ–±–æ–π
        await self.message.edit(embed=closed_embed)
        await interaction.response.send_message("‚úÖ –ñ–∞–ª–æ–±–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞!", ephemeral=True)

        # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—å –∂–∞–ª–æ–±—É"
        self.view.is_closed = True
        for button in self.view.children:
            if isinstance(button, discord.ui.Button) and button.label == "–ó–∞–∫—Ä—ã—Ç—å –∂–∞–ª–æ–±—É":
                button.disabled = True
        await self.message.edit(view=self.view)


# –ö–æ–º–∞–Ω–¥—ã
@bot.tree.command(name="report", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def report(interaction: discord.Interaction):
    await interaction.response.send_modal(ReportModal())


@bot.tree.command(name="list_reports", description="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∂–∞–ª–æ–±")
async def list_reports(interaction: discord.Interaction):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω—É–∂–Ω–∞—è —Ä–æ–ª—å
    if not any(role.id == SUPPORT_ROLE_ID for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∂–∞–ª–æ–±.", ephemeral=True)
        return

    reports = get_all_reports()
    if not reports:
        await interaction.response.send_message("‚ùå –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∂–∞–ª–æ–±.", ephemeral=True)
        return

    embed = discord.Embed(
        title="üìú –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∂–∞–ª–æ–±",
        color=discord.Color.blue()
    )

    for report in reports:
        closed_status = "–ó–∞–∫—Ä—ã—Ç–∞" if report.get("is_closed") else "–û—Ç–∫—Ä—ã—Ç–∞"
        resolved_by = f"<@{report['resolved_by']}>" if report.get("resolved_by") else "–ù–µ —Ä–µ—à–µ–Ω–∞"
        claimed_by = f"<@{report['claimed_by']}>" if report.get("claimed_by") else "–ù–µ –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è"
        embed.add_field(
            name=f"–ñ–∞–ª–æ–±–∞ #{report['report_id']}",
            value=f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {report['user_id']}\n–ü—Ä–∏—á–∏–Ω–∞: {report['reason']}\n–°—Ç–∞—Ç—É—Å: {closed_status}\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {resolved_by}\n–û—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è: {claimed_by}",
            inline=False
        )

    await interaction.response.send_message(embed=embed, ephemeral=True)


@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"üîÅ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã {len(synced)} –∫–æ–º–∞–Ω–¥.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∏–º–∞
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.streaming, name="Report System", url="https://www.twitch.tv/myrchuk21"))

bot.run(os.getenv("DISCORD_BOT_TOKEN"))